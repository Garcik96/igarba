---
import moment from 'moment'

import Briefcase from './icons/Briefcase.astro'
import School from './icons/School.astro'

interface Props {
	position: string
	type: string
	name: string
	url?: string
	img?: string
	title: string
	startDate: string
	endDate?: string
}

const { position, type, name, url, img, title, startDate, endDate } = Astro.props

const getFormatDate = (dateString: string): string => {
	interface IMonths {
		[key: number]: string
	}

	const Months: IMonths = {
		0: 'Enero',
		1: 'Febrero',
		2: 'Marzo',
		3: 'Abril',
		4: 'Mayo',
		5: 'Junio',
		6: 'Julio',
		7: 'Agosto',
		8: 'Septiembre',
		9: 'Octubre',
		10: 'Noviembre',
		11: 'Diciembre'
	}

	const date = moment(dateString, 'DD/MM/YYYY')

	return `${Months[date.month()]} ${date.year()}`
}

const getDateDiffInMonth = (): number => {
	const startDateMoment = moment(startDate, 'DD/MM/YYYY')
	const endDateMoment = moment(endDate ?? new Date(), 'DD/MM/YYYY')
	return endDateMoment.diff(startDateMoment, 'months') + 1
}

const getDateDiffInYears = (): number => {
	const startDateMoment = moment(startDate, 'DD/MM/YYYY')
	const endDateMoment = moment(endDate ?? new Date(), 'DD/MM/YYYY')
	return endDateMoment.diff(startDateMoment, 'years')
}

const getDateDiff = (): string => {
	const years = getDateDiffInYears()
	const months = getDateDiffInMonth() % 12

	const yearsString = years === 1 ? `${years} a침o` : `${years} a침os`
	const monthsString = months === 1 ? `${months} mes` : `${months} meses`

	if (!years) return monthsString

	if (!months) return yearsString

	return `${yearsString} y ${monthsString}`
}
---

<article class:list={['w-full | flex flex-col md:flex-row', position === 'right' && 'justify-end']}>
	<div
		class:list={[
			'w-full md:w-1/2 | flex',
			position === 'right' ? 'md:pl-16' : 'md:pr-16 | justify-end'
		]}
	>
		<div class='relative | w-full | p-4 | flex flex-col | bg-white | rounded-lg'>
			{
				img
					? (
						<a class='my-4' href={url ?? ''} target='_blank'>
							<img class='w-60' src={`logos/${img}.png`} alt={name} />
						</a>
					)
					: (
						<span class='text-lg'>{name}</span>
					)
			}

			<span class='text-2xl font-bold'>{title}</span>
			<span class='font-semibold'
			>{getFormatDate(startDate)} - {endDate ? getFormatDate(endDate) : 'Actualidad'}</span
			>
			{type !== 'school' && <span class='text-gray-500'>({getDateDiff()})</span>}

			<div
				class:list={[
					'h-6 | pl-4 pr-5 | absolute -top-3 -left-3 | flex items-center gap-2',
					(type === 'work' || type === 'internships') &&
						'bg-igarba-orange-700 | clip-path-ribbon-work',
					type === 'school' && 'bg-igarba-purple-200 | clip-path-ribbon-school'
				]}
			>
				{
					type === 'work' && (
						<>
							<Briefcase width={18} height={18} />
							<span>Puesto de trabajo</span>
						</>
					)
				}
				{
					type === 'internships' && (
						<>
							<Briefcase width={18} height={18} />
							<span>Pr치cticas</span>
						</>
					)
				}
				{
					type === 'school' && (
						<>
							<School width={18} height={18} />
							<span>Titulaci칩n</span>
						</>
					)
				}
			</div>
			<div
				class:list={[
					'h-3 w-3 | absolute top-3 -left-3 | clip-path-triangle',
					(type === 'work' || type === 'internships') && 'bg-igarba-orange-1100',
					type === 'school' && 'bg-igarba-purple-400'
				]}
			>
			</div>
		</div>
	</div>

	<div
		class:list={[
			'w-16 | mt-12 | border border-igarba-orange-1000 | absolute left-1/2 | hidden md:block',
			position === 'left' && 'transform -translate-x-full'
		]}
	>
	</div>

	<div
		class='w-12 h-12 | mt-6 | rounded-full | bg-igarba-orange-800 | hidden md:flex md:justify-center md:items-center | absolute left-1/2 | transform -translate-x-1/2'
	>
		{(type === 'work' || type === 'internships') && <Briefcase />}
		{type === 'school' && <School />}
	</div>
</article>

<style>
	.clip-path-triangle {
		-webkit-clip-path: polygon(0 0, 100% 0, 100% 100%);
		clip-path: polygon(0 0, 100% 0, 100% 100%);
	}

	.clip-path-ribbon-work {
		-webkit-clip-path: polygon(0 0, 100% 0, 95% 50%, 100% 100%, 0 100%);
		clip-path: polygon(0 0, 100% 0, 95% 50%, 100% 100%, 0 100%);
	}

	.clip-path-ribbon-school {
		-webkit-clip-path: polygon(0 0, 100% 0, 92% 50%, 100% 100%, 0 100%);
		clip-path: polygon(0 0, 100% 0, 92% 50%, 100% 100%, 0 100%);
	}
</style>
